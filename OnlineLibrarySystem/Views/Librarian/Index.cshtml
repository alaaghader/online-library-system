@section AddToHead {
    <style type="text/css">
        #table .form-control-plaintext {
            border-width: 1px;
            border-radius: .25rem;
            padding: 12px;
        }

        #table td {
            padding: 0px !important;
        }

        #table .form-control-plaintext:focus {
            outline: none;
        }

        #table .form-control-plaintext:active {
            background-color: gray;
            color: white;
        }

        #table .form-control-plaintext:hover {
            border: 1px dashed red;
            outline: none;
        }

        #table .form-control-plaintext:not([type="text"]) {
            user-select: none;
            cursor: pointer;
        }
    </style>
}

<div class="container my-5">
    <div class="overflow-x-auto overflow-y-hidden shadow-sm border rounded p-0 m-0">
        <table class="table table-hover m-0 p-0 mw-100">
            <thead class="thead-light">
                <tr>
                    <th colspan="7">
                        <div class="row m-0">
                            <div class="col px-3">
                                <input id="search" class="form-control-plaintext remove-outline form-control-sm" type="text" placeholder="Search for a specific book" />
                            </div>
                            <div class="col-auto px-2">
                                <button class="btn btn-sm btn-primary rounded">Add a new book</button>
                            </div>
                        </div>
                    </th>
                </tr>
                <tr>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Author</th>
                    <th>Publisher</th>
                    <th>Publishing date</th>
                    <th style="width: 6%">Quantity</th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody id="table"></tbody>
        </table>
    </div>
</div>

@section scripts {
    <script type="text/javascript">

        (function () {

            var authors;
            var publishers;
            var books;

            // load data to be used
            function loadData() {
                // load authors
                var a1 = $.ajax({
                    url: 'api/ApiBook/GetAuthors',
                    success: function (res) {
                        authors = [{ value: null, data: 'None' }];
                        for (var i = 0; i < res.length; i++) {
                            authors.push({
                                value: res[i].AuthorId,
                                data: res[i].AuthorName
                            });
                        }
                    }
                });
                // load publishers
                var a2 = $.ajax({
                    url: 'api/ApiBook/GetPublishers',
                    success: function (res) {
                        publishers = [{ value: null, data: 'None' }];
                        for (var i = 0; i < res.length; i++) {
                            publishers.push({
                                value: res[i].PublisherId,
                                data: res[i].PublisherName
                            });
                        }
                    }
                });
                // load books
                var a3 = $.ajax({
                    url: 'api/ApiBook/GetBooks',
                    success: function (res) {
                        books = res;
                    }
                });
                // after all ajax calls are done
                $.when(a1, a2, a3).then(fillData);
            }

            // fill books in table
            function fillData() {
                var $table = $('#table');
                // clear old content
                $table.html('');
                for (var i = 0; i < books.length; i++) {
                    var $tr = $(
                        '<tr data-bookId="' + books[i].BookId + '">' +
                        '<td>' +
                        '<input class="form-control-plaintext BookTitle" type="text" value="' + books[i].BookTitle + '" />' +
                        '</td>' +
                        '<td>' +
                        '<input class="form-control-plaintext BookDescription" type="text" value="' + books[i].BookDescription + '" />' +
                        '</td>' +
                        '<td>' +
                        '<input class="form-control-plaintext AuthorId" readonly value="' + books[i].AuthorName + '" />' +
                        '</td>' +
                        '<td>' +
                        '<input class="form-control-plaintext PublisherId" readonly value="' + books[i].PublisherName + '" />' +
                        '</td>' +
                        '<td>' +
                        '<input class="form-control-plaintext PublishingDate" type="date" value="' + Date.parse(books[i].PublishingDate).toString('yyyy-MM-dd') + '" />' +
                        '</td>' +
                        '<td>' +
                        '<input class="form-control-plaintext Quantity" type="number" min="0" value="' + books[i].Quantity + '" />' +
                        '</td>' +
                        '<td>' +
                        '<div class="form-control-plaintext Options">' +
                        '<div class="save hidden"><a class="btn-link">Save</a> | </div>' +
                        '<a class="btn-link">Delete</a>' +
                        '</div>' +
                        '</td>' +
                        '</tr>'
                    );
                    $tr.find('.AuthorId')._autocomplete(authors);
                    $tr.find('.PublisherId')._autocomplete(publishers);
                    books[i].$elem = $tr;
                    $table.append($tr);
                    (function (currentTr) {
                        currentTr.find('input').change(function () {
                            currentTr.find('.save').removeClass('hidden');
                            for (var j = 0; j < books.length; j++) {
                                if (books[j].BookId != currentTr.attr('data-bookId')) {
                                    books[j].$elem.css('opacity', 0.5);
                                    books[j].$elem.find('input').attr('disabled', true);
                                }
                            }
                        });
                        currentTr.find('.save a').click(function () {
                            $.ajax({
                                url: 'api/ApiBook/UpdateBook',
                                type: "post",
                                data: {
                                    BookId: currentTr.attr('data-bookId'),
                                    BookTitle: currentTr.find('.BookTitle').val(),
                                    BookDescription: currentTr.find('.BookDescription').val(),
                                    AuthorId: null,
                                    Publisherid: null,
                                    PublishingDate: currentTr.find('.PublishingDate').val(),
                                    Quantity: currentTr.find('.Quantity').val(),
                                    Token: $('#Token').val()
                                },
                                success: function (res) {
                                    if (res) {
                                        window.location.reload(true);
                                    } else {
                                        Alert(_errorMsg, 'Make sure your data is valid!');
                                    }
                                },
                                error: function () {
                                    Alert(_errorMsg, _errorAdmin);
                                }
                            });
                        });
                    })($tr);
                }
            }

            function initSearch() {
                $('#search').on('change keyup', function () {
                    if (this.value === '') {
                        for (var i = 0; i < books.length; i++) {
                            books[i].$elem.show();
                        }
                    } else {
                        for (var i = 0; i < books.length; i++) {
                            if (books[i].BookTitle.toLowerCase().includes(this.value.toLowerCase())) {
                                books[i].$elem.show();
                            } else {
                                books[i].$elem.hide();
                            }
                        }
                    }
                });
            }

            $(document).ready(function () {
                loadData();
                initSearch();
            });

        })();
    </script>
}